name: "Publish all libs, Arrow-stack and Docs"

on:
  push:
    branches:
      - testing-publish-process
    paths:
      - 'arrow-libs/**'
      - '.github/**'

env:
  BASEDIR: ${{github.workspace}}/arrow-libs
  JAVA_OPTS: -Xms512m -Xmx1024m
  SONATYPE_USER: ${{ secrets.SONATYPE_USER }}
  SONATYPE_PWD: ${{ secrets.SONATYPE_PWD }}
  ORG_GRADLE_PROJECT_signingKey: ${{ secrets.ORG_GRADLE_PROJECT_signingKey }}
  ORG_GRADLE_PROJECT_signingPassword: ${{ secrets.ORG_GRADLE_PROJECT_signingPassword }}
  GRADLE_OPTS: -Dorg.gradle.configureondemand=true -Dorg.gradle.parallel=false -Dkotlin.incremental=false -Dorg.gradle.jvmargs="-Xmx3g -XX:MaxPermSize=2048m -XX:+HeapDumpOnOutOfMemoryError -Dfile.encoding=UTF-8"

jobs:

  publish_macos_and_linux:
    runs-on: macos-latest
    timeout-minutes: 40

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Restore Gradle cache
        id: cache
        uses: actions/cache@v2.1.6
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            ~/.konan
          key: mac-step-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            mac-step-gradle-

      - name: "Install grep"
        run: brew install grep

      - name: "Set env"
        run: ${GITHUB_WORKSPACE}/.github/scripts/set-env.sh

      - name: "Show env"
        run: ${GITHUB_WORKSPACE}/.github/scripts/show-env.sh

      - name: Publish
        working-directory: arrow-libs
        run: |
          ./gradlew :arrow-annotation:publish
          echo "$(cat $BASEDIR/gradle.properties | grep VERSION_NAME | cut -d'=' -f2) MacOs X64 deployed!"

  publish_windows:
    runs-on: windows-latest
    timeout-minutes: 20

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Restore Gradle cache
        id: cache
        uses: actions/cache@v2.1.6
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            ~/.konan
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: "Set env"
        run: ${GITHUB_WORKSPACE}/.github/scripts/set-env.sh
        shell: bash

      - name: "Show env"
        run: ${GITHUB_WORKSPACE}/.github/scripts/show-env.sh
        shell: bash

      - name: Publish MingwX64
        working-directory: arrow-libs
        run: |
          ./gradlew :arrow-annotation:publishMingwX64PublicationToMavenRepository
          echo "$(cat gradle.properties | grep VERSION_NAME | cut -d'=' -f2) MingwX64 deployed!"
